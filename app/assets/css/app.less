body {
    background: #F0F0F0;
    padding: 10px;
}

@img-size: 300px;
@detail-size: 75px;
@spacing: 18px;

.music-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
}

//Items displayed on /browse
.browse-head {
    height: 50px;
    margin-bottom: @spacing;

    .sort {
        float: right;
        img {
            width: 20px;
        }

        a {
            .anchor-override;
            font-weight: bold;
        }
    }
}
.music-item {
    height: @img-size + @detail-size;
    width: @img-size;
    background: white;
    display: inline-block;
    margin: 0 10px @spacing 10px;

    .cover-image, img {
        height: @img-size;
        width: @img-size;
        position: relative;
    }

    .cover-image {
        .gradient-overlay;
    }

    .artist-name, .song-name {
        color: white;
        z-index: 3; //place in front of gradient overlay
        position: absolute;
        left: @spacing;
        right: @spacing;
    }

    .artist-name {
        font-size: 14px;
        opacity: .7;
        bottom: 50px; //leave room for song name
        height: 16px;
        .truncate-text;
    }

    .song-name {
        font-size: 24px;
        bottom: 20px;
        height: 28px;
        .truncate-text;
    }

    .details {
        height: @detail-size - (@spacing * 2);
        padding: @spacing;

        .column {
            width: 32%;
            display: inline-block;

            .stat {
                opacity: .7;
                height: 18px;
                .truncate-text;
            }
        }
    }
}


// /filter page and general menu items that could be reused in future menus
@menu-item-size: 26px;
.menu-list {
    list-style: none;
    float: left;
}

.menu-list li, .selected-sort {
    font-size: @menu-item-size;
    cursor: pointer;
    height: 30px;
    opacity: .7;

    &.selected {
        opacity: 1;
        font-weight: bold;
    }
}

.menu-list li {
    margin-bottom: 5px;
}

.icon {
    display: inline-block;
    height: @menu-item-size;
    vertical-align: text-top;
}

.close {
    cursor: pointer;
    float: right;
}


//Truncate text overflow with ...
.truncate-text {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

//Overlay a gradient from white to black
.gradient-overlay {

    &:before {
        content: '';
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-image: linear-gradient(transparent 30%,black);
        opacity: .4; 
        z-index: 2;
    }
}


//Override browser default anchor styles
.anchor-override {
    color: black;
    text-decoration: none;
    &:hover, &:active, &:focus, &:visited {
        //Usually I would have a different color for the hover and active states
        color: black;
    }
}
//TODO: make everything smaller on mobile